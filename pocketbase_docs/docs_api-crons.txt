URL: https://pocketbase.io/docs/api-crons

API Crons
List cron jobs
Returns list with all registered app level cron jobs.
Only superusers can perform this action.
JavaScript
Dart
import
PocketBase
from
'pocketbase'
;
const
pb
=
new
PocketBase
(
'http://127.0.0.1:8090'
)
;
...
await
pb
.
collection
(
"_superusers"
)
.
authWithPassword
(
'test@example.com'
,
'1234567890'
)
;
const
jobs
=
await
pb
.
crons
.
getFullList
(
)
;
import
'package:pocketbase/pocketbase.dart'
;
final
pb
=
PocketBase
(
'http://127.0.0.1:8090'
)
;
.
.
.
await
pb
.
collection
(
"_superusers"
)
.
authWithPassword
(
'test@example.com'
,
'1234567890'
)
;
final
jobs
=
await
pb
.
crons
.
getFullList
(
)
;
API details
GET
/api/crons
Query parameters
Param
Type
Description
fields
String
Comma separated string of the fields to return in the JSON response
(by default returns all fields)
. Ex.:
?
fields
=
*
,
expand
.
relField
.
name
*
targets all keys from the specific depth level.
In addition, the following field modifiers are also supported:
:excerpt(maxLength, withEllipsis?)
Returns a short plain text version of the field string value.
Ex.:
?fields=*,description:excerpt(200,true)
Responses
200
400
401
403
[
{
"id"
:
"__pbDBOptimize__"
,
"expression"
:
"0 0 * * *"
}
,
{
"id"
:
"__pbMFACleanup__"
,
"expression"
:
"0 * * * *"
}
,
{
"id"
:
"__pbOTPCleanup__"
,
"expression"
:
"0 * * * *"
}
,
{
"id"
:
"__pbLogsCleanup__"
,
"expression"
:
"0 */6 * * *"
}
]
{
"status"
:
400
,
"message"
:
"Failed to load backups filesystem."
,
"data"
:
{
}
}
{
"status"
:
401
,
"message"
:
"The request requires valid record authorization token."
,
"data"
:
{
}
}
{
"status"
:
403
,
"message"
:
"Only superusers can perform this action."
,
"data"
:
{
}
}
Run cron job
Triggers a single cron job by its id.
Only superusers can perform this action.
JavaScript
Dart
import
PocketBase
from
'pocketbase'
;
const
pb
=
new
PocketBase
(
'http://127.0.0.1:8090'
)
;
...
await
pb
.
collection
(
"_superusers"
)
.
authWithPassword
(
'test@example.com'
,
'1234567890'
)
;
await
pb
.
crons
.
run
(
'__pbLogsCleanup__'
)
;
import
'package:pocketbase/pocketbase.dart'
;
final
pb
=
PocketBase
(
'http://127.0.0.1:8090'
)
;
.
.
.
await
pb
.
collection
(
"_superusers"
)
.
authWithPassword
(
'test@example.com'
,
'1234567890'
)
;
await
pb
.
crons
.
run
(
'__pbLogsCleanup__'
)
;
API details
POST
/api/crons/
jobId
Requires
Authorization:TOKEN
Path parameters
Param
Type
Description
jobId
String
The identifier of the cron job to run.
Responses
204
401
403
404
null
{
"status"
:
401
,
"message"
:
"The request requires valid record authorization token."
,
"data"
:
{
}
}
{
"status"
:
403
,
"message"
:
"The authorized record is not allowed to perform this action."
,
"data"
:
{
}
}
{
"status"
:
404
,
"message"
:
"Missing or invalid cron job."
,
"data"
:
{
}
}