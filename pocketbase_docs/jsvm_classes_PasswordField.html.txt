URL: https://pocketbase.io/jsvm/classes/PasswordField.html

PocketBase JSVM reference
PasswordField
Class PasswordField
PasswordField defines "password" type field for storing bcrypt hashed strings
(usually used only internally for the "password" auth collection system field).
If you want to set a direct bcrypt hash as record field value you can use the SetRaw method, for example:
// generates a bcrypt hash of "123456" and set it as field value
// (record.GetString("password") returns the plain password until persisted, otherwise empty string)
record.
Set
(
"password"
,
"123456"
)
// set directly a bcrypt hash of "123456" as field value
// (record.GetString("password") returns empty string)
record.
SetRaw
(
"password"
,
"$2a$10$.5Elh8fgxypNUWhpUUr/xOa2sZm0VIaE0qWuGGl9otUfobb46T1Pq"
)
Copy
The following additional getter keys are available:
-
"fieldName:hash"
-
returns the bcrypt hash string
of
the record field
value
(if any). For
example
:
record.
GetString
(
"password:hash"
)
Copy
Hierarchy
core
.
PasswordField
PasswordField
Implements
core
.
PasswordField
Defined in
types.d.ts:399
Defined in
types.d.ts:405
Index
Constructors
constructor
Methods
column
Type
driver
Value
find
Getter
find
Setter
get
Hidden
get
Id
get
Name
get
System
intercept
prepare
Value
set
Hidden
set
Id
set
Name
set
System
type
validate
Settings
validate
Value
Properties
cost
hidden
id
max
min
name
pattern
presentable
required
system
Constructors
constructor
new
Password
Field
(
data
?
)
:
PasswordField
Parameters
Optional
data
:
Partial
<
core
.
PasswordField
>
Returns
PasswordField
Inherited from core.PasswordField.constructor
Defined in
types.d.ts:406
Methods
column
Type
column
Type
(
app
)
:
string
ColumnType implements [Field.ColumnType] interface method.
Parameters
app
:
App
Returns
string
Inherited from
PasswordField
.
columnType
Defined in
types.d.ts:10679
driver
Value
driver
Value
(
record
)
:
any
DriverValue implements the [DriverValuer] interface.
Parameters
record
:
core
.
Record
Returns
any
Inherited from
PasswordField
.
driverValue
Defined in
types.d.ts:10685
find
Getter
find
Getter
(
key
)
:
GetterFunc
FindGetter implements the [GetterFinder] interface.
Parameters
key
:
string
Returns
GetterFunc
Inherited from
PasswordField
.
findGetter
Defined in
types.d.ts:10715
find
Setter
find
Setter
(
key
)
:
SetterFunc
FindSetter implements the [SetterFinder] interface.
Parameters
key
:
string
Returns
SetterFunc
Inherited from
PasswordField
.
findSetter
Defined in
types.d.ts:10721
get
Hidden
get
Hidden
(
)
:
boolean
GetHidden implements [Field.GetHidden] interface method.
Returns
boolean
Inherited from
PasswordField
.
getHidden
Defined in
types.d.ts:10667
get
Id
get
Id
(
)
:
string
GetId implements [Field.GetId] interface method.
Returns
string
Inherited from
PasswordField
.
getId
Defined in
types.d.ts:10631
get
Name
get
Name
(
)
:
string
GetName implements [Field.GetName] interface method.
Returns
string
Inherited from
PasswordField
.
getName
Defined in
types.d.ts:10643
get
System
get
System
(
)
:
boolean
GetSystem implements [Field.GetSystem] interface method.
Returns
boolean
Inherited from
PasswordField
.
getSystem
Defined in
types.d.ts:10655
intercept
intercept
(
ctx
,
app
,
record
,
actionName
,
actionFunc
)
:
void
Intercept implements the [RecordInterceptor] interface.
Parameters
ctx
:
context
.
Context
app
:
App
record
:
core
.
Record
actionName
:
string
actionFunc
:
(
(
)
=>
void
)
(
)
:
void
Returns
void
Returns
void
Inherited from
PasswordField
.
intercept
Defined in
types.d.ts:10709
prepare
Value
prepare
Value
(
record
,
raw
)
:
any
PrepareValue implements [Field.PrepareValue] interface method.
Parameters
record
:
core
.
Record
raw
:
any
Returns
any
Inherited from
PasswordField
.
prepareValue
Defined in
types.d.ts:10691
set
Hidden
set
Hidden
(
hidden
)
:
void
SetHidden implements [Field.SetHidden] interface method.
Parameters
hidden
:
boolean
Returns
void
Inherited from
PasswordField
.
setHidden
Defined in
types.d.ts:10673
set
Id
set
Id
(
id
)
:
void
SetId implements [Field.SetId] interface method.
Parameters
id
:
string
Returns
void
Inherited from
PasswordField
.
setId
Defined in
types.d.ts:10637
set
Name
set
Name
(
name
)
:
void
SetName implements [Field.SetName] interface method.
Parameters
name
:
string
Returns
void
Inherited from
PasswordField
.
setName
Defined in
types.d.ts:10649
set
System
set
System
(
system
)
:
void
SetSystem implements [Field.SetSystem] interface method.
Parameters
system
:
boolean
Returns
void
Inherited from
PasswordField
.
setSystem
Defined in
types.d.ts:10661
type
type
(
)
:
string
Type implements [Field.Type] interface method.
Returns
string
Inherited from
PasswordField
.
type
Defined in
types.d.ts:10625
validate
Settings
validate
Settings
(
ctx
,
app
,
collection
)
:
void
ValidateSettings implements [Field.ValidateSettings] interface method.
Parameters
ctx
:
context
.
Context
app
:
App
collection
:
core
.
Collection
Returns
void
Inherited from
PasswordField
.
validateSettings
Defined in
types.d.ts:10703
validate
Value
validate
Value
(
ctx
,
app
,
record
)
:
void
ValidateValue implements [Field.ValidateValue] interface method.
Parameters
ctx
:
context
.
Context
app
:
App
record
:
core
.
Record
Returns
void
Inherited from
PasswordField
.
validateValue
Defined in
types.d.ts:10697
Properties
cost
cost
:
number
Cost specifies the cost/weight/iteration/etc. bcrypt factor.
If zero, fallback to [bcrypt.DefaultCost].
If explicitly set, must be between [bcrypt.MinCost] and [bcrypt.MaxCost].
Implementation of
PasswordField
.
cost
Inherited from
PasswordField
.
cost
Defined in
types.d.ts:10615
hidden
hidden
:
boolean
Hidden hides the field from the API response.
Implementation of
PasswordField
.
hidden
Inherited from
PasswordField
.
hidden
Defined in
types.d.ts:10586
id
id
:
string
Id is the unique stable field identifier.
It is automatically generated from the name when adding to a collection FieldsList.
Implementation of
PasswordField
.
id
Inherited from
PasswordField
.
id
Defined in
types.d.ts:10578
max
max
:
number
Max specifies an optional required field string length.
If zero, fallback to max 71 bytes.
Implementation of
PasswordField
.
max
Inherited from
PasswordField
.
max
Defined in
types.d.ts:10607
min
min
:
number
Min specifies an optional required field string length.
Implementation of
PasswordField
.
min
Inherited from
PasswordField
.
min
Defined in
types.d.ts:10601
name
name
:
string
Name (required) is the unique name of the field.
Implementation of
PasswordField
.
name
Inherited from
PasswordField
.
name
Defined in
types.d.ts:10572
pattern
pattern
:
string
Pattern specifies an optional regex pattern to match against the field value.
Leave it empty to skip the pattern check.
Implementation of
PasswordField
.
pattern
Inherited from
PasswordField
.
pattern
Defined in
types.d.ts:10597
presentable
presentable
:
boolean
Presentable hints the Dashboard UI to use the underlying
field record value in the relation preview label.
Implementation of
PasswordField
.
presentable
Inherited from
PasswordField
.
presentable
Defined in
types.d.ts:10591
required
required
:
boolean
Required will require the field value to be non-empty string.
Implementation of
PasswordField
.
required
Inherited from
PasswordField
.
required
Defined in
types.d.ts:10619
system
system
:
boolean
System prevents the renaming and removal of the field.
Implementation of
PasswordField
.
system
Inherited from
PasswordField
.
system
Defined in
types.d.ts:10582