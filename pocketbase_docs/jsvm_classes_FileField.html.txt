URL: https://pocketbase.io/jsvm/classes/FileField.html

PocketBase JSVM reference
FileField
Class FileField
FileField defines "file" type field for managing record file(s).
Only the file name is stored as part of the record value.
New files (aka. files to upload) are expected to be of *filesytem.File.
If MaxSelect is not set or <= 1, then the field value is expected to be a single record id.
If MaxSelect is > 1, then the field value is expected to be a slice of record ids.
The respective zero record field value is either empty string (single) or empty string slice (multiple).
The following additional setter keys are available:
-
"fieldName+"
-
append one or more files to the existing record one. For
example
:
// []string{"old1.txt", "old2.txt", "new1_ajkvass.txt", "new2_klhfnwd.txt"}
record.
Set
(
"documents+"
, []
*
filesystem.File{new1, new2})
-
"+fieldName"
-
prepend one or more files to the existing record one. For
example
:
// []string{"new1_ajkvass.txt", "new2_klhfnwd.txt", "old1.txt", "old2.txt",}
record.
Set
(
"+documents"
, []
*
filesystem.File{new1, new2})
-
"fieldName-"
-
subtract
/delete
one or more files from the existing record one. For
example
:
// []string{"old2.txt",}
record.
Set
(
"documents-"
,
"old1.txt"
)
Copy
Hierarchy
core
.
FileField
FileField
Implements
core
.
FileField
Defined in
types.d.ts:459
Defined in
types.d.ts:465
Index
Constructors
constructor
Methods
calculate
Max
Body
Size
column
Type
driver
Value
find
Getter
find
Setter
get
Hidden
get
Id
get
Name
get
System
intercept
is
Multiple
prepare
Value
set
Hidden
set
Id
set
Name
set
System
type
validate
Settings
validate
Value
Properties
hidden
id
max
Select
max
Size
mime
Types
name
presentable
protected
required
system
thumbs
Constructors
constructor
new
File
Field
(
data
?
)
:
FileField
Parameters
Optional
data
:
Partial
<
core
.
FileField
>
Returns
FileField
Inherited from core.FileField.constructor
Defined in
types.d.ts:466
Methods
calculate
Max
Body
Size
calculate
Max
Body
Size
(
)
:
number
CalculateMaxBodySize implements the [MaxBodySizeCalculator] interface.
Returns
number
Inherited from
FileField
.
calculateMaxBodySize
Defined in
types.d.ts:10133
column
Type
column
Type
(
app
)
:
string
ColumnType implements [Field.ColumnType] interface method.
Parameters
app
:
App
Returns
string
Inherited from
FileField
.
columnType
Defined in
types.d.ts:10103
driver
Value
driver
Value
(
record
)
:
any
DriverValue implements the [DriverValuer] interface.
Parameters
record
:
core
.
Record
Returns
any
Inherited from
FileField
.
driverValue
Defined in
types.d.ts:10115
find
Getter
find
Getter
(
key
)
:
GetterFunc
FindGetter implements the [GetterFinder] interface.
Parameters
key
:
string
Returns
GetterFunc
Inherited from
FileField
.
findGetter
Defined in
types.d.ts:10147
find
Setter
find
Setter
(
key
)
:
SetterFunc
FindSetter implements the [SetterFinder] interface.
Parameters
key
:
string
Returns
SetterFunc
Inherited from
FileField
.
findSetter
Defined in
types.d.ts:10153
get
Hidden
get
Hidden
(
)
:
boolean
GetHidden implements [Field.GetHidden] interface method.
Returns
boolean
Inherited from
FileField
.
getHidden
Defined in
types.d.ts:10084
get
Id
get
Id
(
)
:
string
GetId implements [Field.GetId] interface method.
Returns
string
Inherited from
FileField
.
getId
Defined in
types.d.ts:10048
get
Name
get
Name
(
)
:
string
GetName implements [Field.GetName] interface method.
Returns
string
Inherited from
FileField
.
getName
Defined in
types.d.ts:10060
get
System
get
System
(
)
:
boolean
GetSystem implements [Field.GetSystem] interface method.
Returns
boolean
Inherited from
FileField
.
getSystem
Defined in
types.d.ts:10072
intercept
intercept
(
ctx
,
app
,
record
,
actionName
,
actionFunc
)
:
void
Intercept implements the [RecordInterceptor] interface.
note: files delete after records deletion is handled globally by the app FileManager hook
Parameters
ctx
:
context
.
Context
app
:
App
record
:
core
.
Record
actionName
:
string
actionFunc
:
(
(
)
=>
void
)
(
)
:
void
Returns
void
Returns
void
Inherited from
FileField
.
intercept
Defined in
types.d.ts:10141
is
Multiple
is
Multiple
(
)
:
boolean
IsMultiple implements MultiValuer interface and checks whether the
current field options support multiple values.
Returns
boolean
Inherited from
FileField
.
isMultiple
Defined in
types.d.ts:10097
prepare
Value
prepare
Value
(
record
,
raw
)
:
any
PrepareValue implements [Field.PrepareValue] interface method.
Parameters
record
:
core
.
Record
raw
:
any
Returns
any
Inherited from
FileField
.
prepareValue
Defined in
types.d.ts:10109
set
Hidden
set
Hidden
(
hidden
)
:
void
SetHidden implements [Field.SetHidden] interface method.
Parameters
hidden
:
boolean
Returns
void
Inherited from
FileField
.
setHidden
Defined in
types.d.ts:10090
set
Id
set
Id
(
id
)
:
void
SetId implements [Field.SetId] interface method.
Parameters
id
:
string
Returns
void
Inherited from
FileField
.
setId
Defined in
types.d.ts:10054
set
Name
set
Name
(
name
)
:
void
SetName implements [Field.SetName] interface method.
Parameters
name
:
string
Returns
void
Inherited from
FileField
.
setName
Defined in
types.d.ts:10066
set
System
set
System
(
system
)
:
void
SetSystem implements [Field.SetSystem] interface method.
Parameters
system
:
boolean
Returns
void
Inherited from
FileField
.
setSystem
Defined in
types.d.ts:10078
type
type
(
)
:
string
Type implements [Field.Type] interface method.
Returns
string
Inherited from
FileField
.
type
Defined in
types.d.ts:10042
validate
Settings
validate
Settings
(
ctx
,
app
,
collection
)
:
void
ValidateSettings implements [Field.ValidateSettings] interface method.
Parameters
ctx
:
context
.
Context
app
:
App
collection
:
core
.
Collection
Returns
void
Inherited from
FileField
.
validateSettings
Defined in
types.d.ts:10121
validate
Value
validate
Value
(
ctx
,
app
,
record
)
:
void
ValidateValue implements [Field.ValidateValue] interface method.
Parameters
ctx
:
context
.
Context
app
:
App
record
:
core
.
Record
Returns
void
Inherited from
FileField
.
validateValue
Defined in
types.d.ts:10127
Properties
hidden
hidden
:
boolean
Hidden hides the field from the API response.
Implementation of
FileField
.
hidden
Inherited from
FileField
.
hidden
Defined in
types.d.ts:9984
id
id
:
string
Id is the unique stable field identifier.
It is automatically generated from the name when adding to a collection FieldsList.
Implementation of
FileField
.
id
Inherited from
FileField
.
id
Defined in
types.d.ts:9976
max
Select
max
Select
:
number
MaxSelect specifies the max allowed files.
For multiple files the value must be > 1, otherwise fallbacks to single (default).
Implementation of
FileField
.
maxSelect
Inherited from
FileField
.
maxSelect
Defined in
types.d.ts:10001
max
Size
max
Size
:
number
MaxSize specifies the maximum size of a single uploaded file (in bytes and up to 2^53-1).
If zero, a default limit of 5MB is applied.
Implementation of
FileField
.
maxSize
Inherited from
FileField
.
maxSize
Defined in
types.d.ts:9995
mime
Types
mime
Types
:
string
[]
MimeTypes specifies an optional list of the allowed file mime types.
Leave it empty to disable the validator.
Implementation of
FileField
.
mimeTypes
Inherited from
FileField
.
mimeTypes
Defined in
types.d.ts:10007
name
name
:
string
Name (required) is the unique name of the field.
Implementation of
FileField
.
name
Inherited from
FileField
.
name
Defined in
types.d.ts:9970
presentable
presentable
:
boolean
Presentable hints the Dashboard UI to use the underlying
field record value in the relation preview label.
Implementation of
FileField
.
presentable
Inherited from
FileField
.
presentable
Defined in
types.d.ts:9989
protected
protected
:
boolean
Protected will require the users to provide a special file token to access the file.
Note that by default all files are publicly accessible.
For the majority of the cases this is fine because by default
all file names have random part appended to their name which
need to be known by the user before accessing the file.
Implementation of
FileField
.
protected
Inherited from
FileField
.
protected
Defined in
types.d.ts:10032
required
required
:
boolean
Required will require the field value to have at least one file.
Implementation of
FileField
.
required
Inherited from
FileField
.
required
Defined in
types.d.ts:10036
system
system
:
boolean
System prevents the renaming and removal of the field.
Implementation of
FileField
.
system
Inherited from
FileField
.
system
Defined in
types.d.ts:9980
thumbs
thumbs
:
string
[]
Thumbs specifies an optional list of the supported thumbs for image based files.
Each entry must be in one of the following formats:
-
WxH
(eg. 100x300)
-
crop to WxH
viewbox
(from center)
-
WxHt
(eg. 100x300t)
-
crop to WxH
viewbox
(from top)
-
WxHb
(eg. 100x300b)
-
crop to WxH
viewbox
(from bottom)
-
WxHf
(eg. 100x300f)
-
fit inside a WxH
viewbox
(without cropping)
-
0
xH
(eg.
0x300
)
-
resize to
H
height preserving the aspect ratio
-
Wx0
(eg. 100x0)
-
resize to
W
width preserving the aspect ratio
Copy
Implementation of
FileField
.
thumbs
Inherited from
FileField
.
thumbs
Defined in
types.d.ts:10022