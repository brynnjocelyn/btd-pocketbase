URL: https://pocketbase.io/jsvm/classes/RelationField.html

PocketBase JSVM reference
RelationField
Class RelationField
RelationField defines "relation" type field for storing single or
multiple collection record references.
Requires the CollectionId option to be set.
If MaxSelect is not set or <= 1, then the field value is expected to be a single record id.
If MaxSelect is > 1, then the field value is expected to be a slice of record ids.
The respective zero record field value is either empty string (single) or empty string slice (multiple).
The following additional setter keys are available:
-
"fieldName+"
-
append one or more values to the existing record one. For
example
:
record.
Set
(
"categories+"
, []string{
"new1"
,
"new2"
})
// []string{"old1", "old2", "new1", "new2"}
-
"+fieldName"
-
prepend one or more values to the existing record one. For
example
:
record.
Set
(
"+categories"
, []string{
"new1"
,
"new2"
})
// []string{"new1", "new2", "old1", "old2"}
-
"fieldName-"
-
subtract one or more values from the existing record one. For
example
:
record.
Set
(
"categories-"
,
"old1"
)
// []string{"old2"}
Copy
Hierarchy
core
.
RelationField
RelationField
Implements
core
.
RelationField
Defined in
types.d.ts:439
Defined in
types.d.ts:445
Index
Constructors
constructor
Methods
column
Type
driver
Value
find
Setter
get
Hidden
get
Id
get
Name
get
System
is
Multiple
prepare
Value
set
Hidden
set
Id
set
Name
set
System
type
validate
Settings
validate
Value
Properties
cascade
Delete
collection
Id
hidden
id
max
Select
min
Select
name
presentable
required
system
Constructors
constructor
new
Relation
Field
(
data
?
)
:
RelationField
Parameters
Optional
data
:
Partial
<
core
.
RelationField
>
Returns
RelationField
Inherited from core.RelationField.constructor
Defined in
types.d.ts:446
Methods
column
Type
column
Type
(
app
)
:
string
ColumnType implements [Field.ColumnType] interface method.
Parameters
app
:
App
Returns
string
Inherited from
RelationField
.
columnType
Defined in
types.d.ts:10880
driver
Value
driver
Value
(
record
)
:
any
DriverValue implements the [DriverValuer] interface.
Parameters
record
:
core
.
Record
Returns
any
Inherited from
RelationField
.
driverValue
Defined in
types.d.ts:10892
find
Setter
find
Setter
(
key
)
:
SetterFunc
FindSetter implements [SetterFinder] interface method.
Parameters
key
:
string
Returns
SetterFunc
Inherited from
RelationField
.
findSetter
Defined in
types.d.ts:10910
get
Hidden
get
Hidden
(
)
:
boolean
GetHidden implements [Field.GetHidden] interface method.
Returns
boolean
Inherited from
RelationField
.
getHidden
Defined in
types.d.ts:10861
get
Id
get
Id
(
)
:
string
GetId implements [Field.GetId] interface method.
Returns
string
Inherited from
RelationField
.
getId
Defined in
types.d.ts:10825
get
Name
get
Name
(
)
:
string
GetName implements [Field.GetName] interface method.
Returns
string
Inherited from
RelationField
.
getName
Defined in
types.d.ts:10837
get
System
get
System
(
)
:
boolean
GetSystem implements [Field.GetSystem] interface method.
Returns
boolean
Inherited from
RelationField
.
getSystem
Defined in
types.d.ts:10849
is
Multiple
is
Multiple
(
)
:
boolean
IsMultiple implements [MultiValuer] interface and checks whether the
current field options support multiple values.
Returns
boolean
Inherited from
RelationField
.
isMultiple
Defined in
types.d.ts:10874
prepare
Value
prepare
Value
(
record
,
raw
)
:
any
PrepareValue implements [Field.PrepareValue] interface method.
Parameters
record
:
core
.
Record
raw
:
any
Returns
any
Inherited from
RelationField
.
prepareValue
Defined in
types.d.ts:10886
set
Hidden
set
Hidden
(
hidden
)
:
void
SetHidden implements [Field.SetHidden] interface method.
Parameters
hidden
:
boolean
Returns
void
Inherited from
RelationField
.
setHidden
Defined in
types.d.ts:10867
set
Id
set
Id
(
id
)
:
void
SetId implements [Field.SetId] interface method.
Parameters
id
:
string
Returns
void
Inherited from
RelationField
.
setId
Defined in
types.d.ts:10831
set
Name
set
Name
(
name
)
:
void
SetName implements [Field.SetName] interface method.
Parameters
name
:
string
Returns
void
Inherited from
RelationField
.
setName
Defined in
types.d.ts:10843
set
System
set
System
(
system
)
:
void
SetSystem implements [Field.SetSystem] interface method.
Parameters
system
:
boolean
Returns
void
Inherited from
RelationField
.
setSystem
Defined in
types.d.ts:10855
type
type
(
)
:
string
Type implements [Field.Type] interface method.
Returns
string
Inherited from
RelationField
.
type
Defined in
types.d.ts:10819
validate
Settings
validate
Settings
(
ctx
,
app
,
collection
)
:
void
ValidateSettings implements [Field.ValidateSettings] interface method.
Parameters
ctx
:
context
.
Context
app
:
App
collection
:
core
.
Collection
Returns
void
Inherited from
RelationField
.
validateSettings
Defined in
types.d.ts:10904
validate
Value
validate
Value
(
ctx
,
app
,
record
)
:
void
ValidateValue implements [Field.ValidateValue] interface method.
Parameters
ctx
:
context
.
Context
app
:
App
record
:
core
.
Record
Returns
void
Inherited from
RelationField
.
validateValue
Defined in
types.d.ts:10898
Properties
cascade
Delete
cascade
Delete
:
boolean
CascadeDelete indicates whether the root model should be deleted
in case of delete of all linked relations.
Implementation of
RelationField
.
cascadeDelete
Inherited from
RelationField
.
cascadeDelete
Defined in
types.d.ts:10793
collection
Id
collection
Id
:
string
CollectionId is the id of the related collection.
Implementation of
RelationField
.
collectionId
Inherited from
RelationField
.
collectionId
Defined in
types.d.ts:10788
hidden
hidden
:
boolean
Hidden hides the field from the API response.
Implementation of
RelationField
.
hidden
Inherited from
RelationField
.
hidden
Defined in
types.d.ts:10779
id
id
:
string
Id is the unique stable field identifier.
It is automatically generated from the name when adding to a collection FieldsList.
Implementation of
RelationField
.
id
Inherited from
RelationField
.
id
Defined in
types.d.ts:10771
max
Select
max
Select
:
number
MaxSelect indicates the max number of allowed relation records
that could be linked to the main model.
For multiple select the value must be > 1, otherwise fallbacks to single (default).
If MinSelect is set, MaxSelect must be at least >= MinSelect.
Implementation of
RelationField
.
maxSelect
Inherited from
RelationField
.
maxSelect
Defined in
types.d.ts:10809
min
Select
min
Select
:
number
MinSelect indicates the min number of allowed relation records
that could be linked to the main model.
No min limit is applied if it is zero or negative value.
Implementation of
RelationField
.
minSelect
Inherited from
RelationField
.
minSelect
Defined in
types.d.ts:10800
name
name
:
string
Name (required) is the unique name of the field.
Implementation of
RelationField
.
name
Inherited from
RelationField
.
name
Defined in
types.d.ts:10765
presentable
presentable
:
boolean
Presentable hints the Dashboard UI to use the underlying
field record value in the relation preview label.
Implementation of
RelationField
.
presentable
Inherited from
RelationField
.
presentable
Defined in
types.d.ts:10784
required
required
:
boolean
Required will require the field value to be non-empty.
Implementation of
RelationField
.
required
Inherited from
RelationField
.
required
Defined in
types.d.ts:10813
system
system
:
boolean
System prevents the renaming and removal of the field.
Implementation of
RelationField
.
system
Inherited from
RelationField
.
system
Defined in
types.d.ts:10775